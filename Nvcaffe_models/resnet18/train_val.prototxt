name: "Resnet18"

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "examples/imagenet/ilsvrc12_train_lmdb"
    backend: LMDB
    batch_size: 128
#   batch_size: 512 # DGX1
  }
  transform_param {
    crop_size: 224
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "examples/imagenet/ilsvrc12_val_lmdb"
    backend: LMDB
    batch_size: 32
  }
  transform_param {
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
    crop_size: 224
    mirror: false
  }
  include: { phase: TEST }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    kernel_size: 7
    pad: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "conv1/bn"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "conv1/relu"
  type: "ReLU"
  bottom: "conv1/bn"
  top: "conv1/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
#
# res2
#
layer {
  name: "res2.1.conv1"
  type: "Convolution"
  bottom: "pool1"
  top: "res2.1.conv1"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res2.1.conv1/bn"
  type: "BatchNorm"
  bottom: "res2.1.conv1"
  top: "res2.1.conv1/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.1.conv1/relu"
  type: "ReLU"
  bottom: "res2.1.conv1/bn"
  top: "res2.1.conv1/bn"
}
layer {
  name: "res2.1.conv2"
  type: "Convolution"
  bottom: "res2.1.conv1/bn"
  top: "res2.1.conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res2.1.conv2/bn"
  type: "BatchNorm"
  bottom: "res2.1.conv2"
  top: "res2.1.conv2/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.1.sum"
  type: "Eltwise"
  bottom: "res2.1.conv2/bn"
  bottom: "pool1"
  top: "res2.1.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2.1.relu"
  type: "ReLU"
  bottom: "res2.1.sum"
  top: "res2.1.sum"
}
layer {
  name: "res2.2.conv1"
  type: "Convolution"
  bottom: "res2.1.sum"
  top: "res2.2.conv1"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res2.2.conv1/bn"
  type: "BatchNorm"
  bottom: "res2.2.conv1"
  top: "res2.2.conv1/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.2.conv1/relu"
  type: "ReLU"
  bottom: "res2.2.conv1/bn"
  top: "res2.2.conv1/bn"
}
layer {
  name: "res2.2.conv2"
  type: "Convolution"
  bottom: "res2.2.conv1/bn"
  top: "res2.2.conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res2.2.conv2/bn"
  type: "BatchNorm"
  bottom: "res2.2.conv2"
  top: "res2.2.conv2/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res2.2.sum"
  type: "Eltwise"
  bottom: "res2.2.conv2/bn"
  bottom: "res2.1.sum"
  top: "res2.2.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2.2.relu"
  type: "ReLU"
  bottom: "res2.2.sum"
  top: "res2.2.sum"
}
#
# res3
#
layer {
  name: "res3.1.conv1"
  type: "Convolution"
  bottom: "res2.2.sum"
  top: "res3.1.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.1.conv1/bn"
  type: "BatchNorm"
  bottom: "res3.1.conv1"
  top: "res3.1.conv1/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.1.conv1/relu"
  type: "ReLU"
  bottom: "res3.1.conv1/bn"
  top: "res3.1.conv1/bn"
}
layer {
  name: "res3.1.conv2"
  type: "Convolution"
  bottom: "res3.1.conv1/bn"
  top: "res3.1.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.1.conv2/bn"
  type: "BatchNorm"
  bottom: "res3.1.conv2"
  top: "res3.1.conv2/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.1.skipConv"
  type: "Convolution"
  bottom: "res2.2.sum"
  top: "res3.1.skipConv"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.1.skipConv/bn"
  type: "BatchNorm"
  bottom: "res3.1.skipConv"
  top: "res3.1.skipConv/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.1.sum"
  type: "Eltwise"
  bottom: "res3.1.conv2/bn"
  bottom: "res3.1.skipConv/bn"
  top: "res3.1.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.1.relu"
  type: "ReLU"
  bottom: "res3.1.sum"
  top: "res3.1.sum"
}
layer {
  name: "res3.2.conv1"
  type: "Convolution"
  bottom: "res3.1.sum"
  top: "res3.2.conv1"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.2.conv1/bn"
  type: "BatchNorm"
  bottom: "res3.2.conv1"
  top: "res3.2.conv1/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.2.conv1/relu"
  type: "ReLU"
  bottom: "res3.2.conv1/bn"
  top: "res3.2.conv1/bn"
}
layer {
  name: "res3.2.conv2"
  type: "Convolution"
  bottom: "res3.2.conv1/bn"
  top: "res3.2.conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res3.2.conv2/bn"
  type: "BatchNorm"
  bottom: "res3.2.conv2"
  top: "res3.2.conv2/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res3.2.sum"
  type: "Eltwise"
  bottom: "res3.2.conv2/bn"
  bottom: "res3.1.sum"
  top: "res3.2.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3.2.relu"
  type: "ReLU"
  bottom: "res3.2.sum"
  top: "res3.2.sum"
}
#
# res4
#
layer {
  name: "res4.1.conv1"
  type: "Convolution"
  bottom: "res3.2.sum"
  top: "res4.1.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.1.conv1/bn"
  type: "BatchNorm"
  bottom: "res4.1.conv1"
  top: "res4.1.conv1/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.1.conv1/relu"
  type: "ReLU"
  bottom: "res4.1.conv1/bn"
  top: "res4.1.conv1/bn"
}
layer {
  name: "res4.1.conv2"
  type: "Convolution"
  bottom: "res4.1.conv1/bn"
  top: "res4.1.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.1.conv2/bn"
  type: "BatchNorm"
  bottom: "res4.1.conv2"
  top: "res4.1.conv2/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.1.skipConv"
  type: "Convolution"
  bottom: "res3.2.sum"
  top: "res4.1.skipConv"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.1.skipConv/bn"
  type: "BatchNorm"
  bottom: "res4.1.skipConv"
  top: "res4.1.skipConv/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.1.sum"
  type: "Eltwise"
  bottom: "res4.1.conv2/bn"
  bottom: "res4.1.skipConv/bn"
  top: "res4.1.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.1.relu"
  type: "ReLU"
  bottom: "res4.1.sum"
  top: "res4.1.sum"
}
layer {
  name: "res4.2.conv1"
  type: "Convolution"
  bottom: "res4.1.sum"
  top: "res4.2.conv1"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.2.conv1/bn"
  type: "BatchNorm"
  bottom: "res4.2.conv1"
  top: "res4.2.conv1/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.2.conv1/relu"
  type: "ReLU"
  bottom: "res4.2.conv1/bn"
  top: "res4.2.conv1/bn"
}
layer {
  name: "res4.2.conv2"
  type: "Convolution"
  bottom: "res4.2.conv1/bn"
  top: "res4.2.conv2"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res4.2.conv2/bn"
  type: "BatchNorm"
  bottom: "res4.2.conv2"
  top: "res4.2.conv2/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res4.2.sum"
  type: "Eltwise"
  bottom: "res4.2.conv2/bn"
  bottom: "res4.1.sum"
  top: "res4.2.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4.2.relu"
  type: "ReLU"
  bottom: "res4.2.sum"
  top: "res4.2.sum"
}
#
# res5
#
layer {
  name: "res5.1.conv1"
  type: "Convolution"
  bottom: "res4.2.sum"
  top: "res5.1.conv1"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res5.1.conv1/bn"
  type: "BatchNorm"
  bottom: "res5.1.conv1"
  top: "res5.1.conv1/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.1.conv1/relu"
  type: "ReLU"
  bottom: "res5.1.conv1/bn"
  top: "res5.1.conv1/bn"
}
layer {
  name: "res5.1.conv2"
  type: "Convolution"
  bottom: "res5.1.conv1/bn"
  top: "res5.1.conv2"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res5.1.conv2/bn"
  type: "BatchNorm"
  bottom: "res5.1.conv2"
  top: "res5.1.conv2/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.1.skipConv"
  type: "Convolution"
  bottom: "res4.2.sum"
  top: "res5.1.skipConv"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res5.1.skipConv/bn"
  type: "BatchNorm"
  bottom: "res5.1.skipConv"
  top: "res5.1.skipConv/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.1.sum"
  type: "Eltwise"
  bottom: "res5.1.conv2/bn"
  bottom: "res5.1.skipConv/bn"
  top: "res5.1.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5.1.relu"
  type: "ReLU"
  bottom: "res5.1.sum"
  top: "res5.1.sum"
}
layer {
  name: "res5.2.conv1"
  type: "Convolution"
  bottom: "res5.1.sum"
  top: "res5.2.conv1"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res5.2.conv1/bn"
  type: "BatchNorm"
  bottom: "res5.2.conv1"
  top: "res5.2.conv1/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.2.conv1/relu"
  type: "ReLU"
  bottom: "res5.2.conv1/bn"
  top: "res5.2.conv1/bn"
}
layer {
  name: "res5.2.conv2"
  type: "Convolution"
  bottom: "res5.2.conv1/bn"
  top: "res5.2.conv2"
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "res5.2.conv2/bn"
  type: "BatchNorm"
  bottom: "res5.2.conv2"
  top: "res5.2.conv2/bn"
  batch_norm_param {
    moving_average_fraction: 0.9
    eps: 0.0001
    scale_bias: true
  }
}
layer {
  name: "res5.2.sum"
  type: "Eltwise"
  bottom: "res5.2.conv2/bn"
  bottom: "res5.1.sum"
  top: "res5.2.sum"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5.2.relu"
  type: "ReLU"
  bottom: "res5.2.sum"
  top: "res5.2.sum"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res5.2.sum"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 7
  }
}
layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "pool2"
  top: "fc"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc"
  bottom: "label"
  top: "loss"
 }

layer {
  name: "accuracy/top-1"
  type: "Accuracy"
  bottom: "fc"
  bottom: "label"
  top: "accuracy/top-1"
  accuracy_param { top_k: 1 }
#  include { phase: TEST }
}
layer {
  name: "accuracy/top-5"
  type: "Accuracy"
  bottom: "fc"
  bottom: "label"
  top: "accuracy/top-5"
  accuracy_param { top_k: 5 }
#  include { phase: TEST }
}
